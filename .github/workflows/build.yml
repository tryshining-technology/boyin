name: Build Boyin Executable

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        python-version: ['3.10']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller pyttsx3 pygame

    - name: Build with PyInstaller (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        pyinstaller --onefile --windowed --name=boyin --add-data="broadcast_tasks.json;." --hidden-import=pygame --collect-all pygame boyin.py

    - name: Create folders in dist
      if: matrix.os == 'windows-latest'
      run: |
        mkdir dist\提示音 2>nul || echo "Folder exists"
        mkdir dist\音频文件 2>nul || echo "Folder exists"
        echo. > dist\README.txt
        echo 定时播音系统 > dist\README.txt
        echo. >> dist\README.txt
        echo 使用说明: >> dist\README.txt
        echo 1. 将提示音文件放入"提示音"文件夹 >> dist\README.txt
        echo 2. 将音频文件放入"音频文件"文件夹 >> dist\README.txt
        echo 3. 运行 boyin.exe 开始使用 >> dist\README.txt

    - name: Upload Windows Artifact
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: boyin-windows
        path: |
          dist/boyin.exe
          dist/提示音/
          dist/音频文件/
          dist/README.txt

    - name: Create Release (on tag push)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/boyin.exe
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
