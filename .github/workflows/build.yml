name: Build Python Application

on:
  push:
    branches: [ "main", "master" ]
  workflow_dispatch:

jobs:
  build-windows:
    strategy:
      matrix:
        include:
          # 配置 1: 用于 Windows 7 (32位)
          - python-version: '3.8.10'
            architecture: 'x86'
            artifact-name: 'boyin-Windows-x86'

          # 配置 2: 用于 Windows 7 (64位) - 同样适用于更高版本
          - python-version: '3.8.10'
            architecture: 'x64'
            artifact-name: 'boyin-Windows-x64'

          # 配置 3: 用于 Windows 8.1 - 11 (64位) 的较新Python版本
          - python-version: '3.11'
            architecture: 'x64'
            artifact-name: 'boyin-Windows-x64-py311'

    runs-on: windows-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }} (${{ matrix.architecture }})
        uses: actions/setup-python@v5
        with:
          python-version: '${{ matrix.python-version }}'
          architecture: '${{ matrix.architecture }}'
          
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-${{ matrix.python-version }}-${{ matrix.architecture }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version }}-${{ matrix.architecture }}-pip-

      - name: Install dependencies and configure pywin32
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
          python (Get-Command pywin32_postinstall.py).Source -install

      - name: Build application with PyInstaller
        # 使用 PowerShell 多行命令语法
        run: |
          pyinstaller --noconfirm --onefile --windowed `
            --name "创翔多功能定时播音旗舰版_${{ matrix.architecture }}" `
            --icon="icon.ico" `
            --add-data="icon.ico;." `
            --add-data="vlc_lib_x86;vlc_lib_x86" `
            --add-data="vlc_lib_x64;vlc_lib_x64" `
            boyin.py # 确保这里是你的主脚本文件名

      - name: Upload artifact (${{ matrix.artifact-name }})
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact-name }}
          path: dist/ # PyInstaller 默认会把所有东西都放在 dist 文件夹里
