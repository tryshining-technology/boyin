name: Build Python Application with Nuitka

on:
  push:
    branches: [ "main", "master" ]
  workflow_dispatch:

jobs:
  build-windows:
    strategy:
      matrix:
        include:
          - python-version: '3.8.10'
            architecture: 'x86'
            artifact-name: 'boyin-Windows-x86-for-Win7'
            output-dir-name: '创翔多功能定时播音旗舰版_x86_for_Win7'

          - python-version: '3.8.10'
            architecture: 'x64'
            artifact-name: 'boyin-Windows-x64-for-Win7'
            output-dir-name: '创翔多功能定时播音旗舰版_x64_for_Win7'

          - python-version: '3.11'
            architecture: 'x64'
            artifact-name: 'boyin-Windows-x64-for-Win8.1+'
            output-dir-name: '创翔多功能定时播音旗舰版_x64_for_Win8.1+'

    runs-on: windows-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }} (${{ matrix.architecture }})
        uses: actions/setup-python@v5
        with:
          python-version: '${{ matrix.python-version }}'
          architecture: '${{ matrix.architecture }}'
          
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-${{ matrix.python-version }}-${{ matrix.architecture }}-pip-${{ hashFiles('**/requirements_nuitka.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version }}-${{ matrix.architecture }}-pip-

      - name: Install dependencies and configure pywin32
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements_nuitka.txt
          # --- 核心修正：修正 pywin32 脚本的拼写错误 ---
          python (Get-Command pywin32_postinstall.py).Source -install
        shell: pwsh

      # 核心步骤: Nuitka 编译，不包含 VLC
      - name: Build application with Nuitka
        run: |
          python -m nuitka --standalone --windows-disable-console `
            --output-dir="${{ matrix.output-dir-name }}" `
            --windows-icon-from-ico="icon.ico" `
            --include-data-file="icon.ico=icon.ico" `
            --product-name="创翔多功能定时播音旗舰版" `
            boyin.py
        shell: pwsh

      # 上传打包好的整个文件夹
      - name: Upload artifact (${{ matrix.artifact-name }})
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact-name }}
          path: ${{ matrix.output-dir-name }}/
